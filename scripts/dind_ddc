#!/bin/bash

set -e

# set default values; allow for override
UCP_VERSION="${UCP_VERSION:-2.1.4}"
DTR_VERSION="${DTR_VERSION:-2.2.5}"
HOST_IP="${HOST_IP:-$(ip route get 1 | awk '{print $NF;exit}')}"
DIND_SUBNET="${DIND_SUBNET:-172.19.0.0/16}"
DIND_DIR="${DIND_DIR:-/data/dind}"

# unset DOCKER_HOST to ensure we are not talking to a machine we shouldn't be
unset DOCKER_HOST

create_all() {
  create_swarm
  install_ucp
  install_dtr
}

create_swarm() {
  launch_engines
  init_swarm
}

launch_engines() {
  # get docker group ID
  GROUP_ID="$(getent group docker | awk -F ':' '{print $3}')"

  # create dind network
  echo "Checking for subnet availability..."
  check_subnet
  echo -e "done.\n"

  echo "Creating 'dind' network with the subnet ${DIND_SUBNET}..."
  docker -H unix:///var/run/docker.sock network create -d bridge --subnet="${DIND_SUBNET}" dind
  echo -e "done.\n"

  # get subnet prefix
  DIND_SUBNET_PREFIX="$(docker -H unix:///var/run/docker.sock network inspect --format '{{range .IPAM.Config}}{{.Subnet}}{{end}}' dind | awk -F '/' '{print $1}' | awk -F '.' '{print $1"."$2"."$3"."}')"

  echo "Launching docker engines (docker1, docker2, docker3)..."
  # launch docker1
  ENGINE_NUM="1"
  docker -H unix:///var/run/docker.sock run -d \
    -p 127.0.0.1:100${ENGINE_NUM}:2375 \
    -p 4443:4443 \
    --name docker${ENGINE_NUM} \
    --hostname docker${ENGINE_NUM} \
    --privileged \
    --net dind \
    --ip "${DIND_SUBNET_PREFIX}"$((ENGINE_NUM+1)) \
    -v /lib/modules:/lib/modules:ro \
    -v docker${ENGINE_NUM}:/var/lib/docker \
    -v "${DIND_DIR}"/docker${ENGINE_NUM}:/var/run \
    mbentley/docker-in-docker \
    -s overlay2 -H unix:///var/run/docker.sock -G "${GROUP_ID}"

  # launch docker2
  ENGINE_NUM="2"
  docker -H unix:///var/run/docker.sock run -d \
    -p 127.0.0.1:100${ENGINE_NUM}:2375 \
    -p 80:80 \
    -p 443:443 \
    --name docker${ENGINE_NUM} \
    --hostname docker${ENGINE_NUM} \
    --privileged \
    --net dind \
    --ip "${DIND_SUBNET_PREFIX}"$((ENGINE_NUM+1)) \
    -v /lib/modules:/lib/modules:ro \
    -v docker${ENGINE_NUM}:/var/lib/docker \
    -v "${DIND_DIR}"/docker${ENGINE_NUM}:/var/run \
    mbentley/docker-in-docker \
    -s overlay2 -H unix:///var/run/docker.sock -G "${GROUP_ID}"

  # launch docker3
  ENGINE_NUM="3"
  docker -H unix:///var/run/docker.sock run -d \
    -p 127.0.0.1:100${ENGINE_NUM}:2375 \
    --name docker${ENGINE_NUM} \
    --hostname docker${ENGINE_NUM} \
    --privileged \
    --net dind \
    --ip "${DIND_SUBNET_PREFIX}"$((ENGINE_NUM+1)) \
    -v /lib/modules:/lib/modules:ro \
    -v docker${ENGINE_NUM}:/var/lib/docker \
    -v "${DIND_DIR}"/docker${ENGINE_NUM}:/var/run \
    mbentley/docker-in-docker \
    -s overlay2 -H unix:///var/run/docker.sock -G "${GROUP_ID}"
  echo -e "done.\n"
}

recycle_engines() {
  echo "Stopping docker engines (docker1, docker2, docker3); this may take up to 30 seconds..."
  docker -H unix:///var/run/docker.sock stop -t 30 docker{1..3} || true
  echo -e "done.\n"

  echo "Removing docker engines (docker1, docker2, docker3)..."
  docker -H unix:///var/run/docker.sock rm docker{1..3} || true
  echo -e "done.\n"

  echo "Removing 'dind' network..."
  docker -H unix:///var/run/docker.sock network rm dind || true
  echo -e "done.\n"

  launch_engines
}

init_swarm() {
  echo "Initializing Swarm on docker1..."
  docker -H unix://"${DIND_DIR}"/docker1/docker.sock swarm init
  echo -e "done.\n"

  # get swarm worker join token
  TOKEN=$(docker -H unix://"${DIND_DIR}"/docker1/docker.sock swarm join-token worker -q)

  JOIN_COMMAND="swarm join --token ${TOKEN} $(docker -H unix:///var/run/docker.sock container inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker1):2377"

  echo "Joining docker2 to the Swarm..."
  #shellcheck disable=SC2086
  docker -H unix://"${DIND_DIR}"/docker2/docker.sock ${JOIN_COMMAND}
  echo -e "done.\n"

  echo "Joining docker3 to the Swarm..."
  #shellcheck disable=SC2086
  docker -H unix://"${DIND_DIR}"/docker3/docker.sock ${JOIN_COMMAND}
  echo -e "done.\n"
}

connect_engine() {
  ENGINE_NUM="${1}"
  echo "# to connect to a given engine, use:"
  #shellcheck disable=SC2016
  echo '# eval "$(./dind_swarm connect_engine '"${1}"')"'
  echo "export DOCKER_HOST=unix://${DIND_DIR}/${ENGINE_NUM}/docker.sock"
}

install_ucp() {
  DOCKER1_IP="$(docker -H unix:///var/run/docker.sock container inspect --format='{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' docker1)"

  # load all UCP images to docker1
  echo "Loading UCP images on docker1..."
  docker -H unix://"${DIND_DIR}"/docker1/docker.sock load -i /data/ucp_images_"${UCP_VERSION}".tar.gz
  echo -e "done.\n"

  # load docker/ucp-agent from docker1 to docker2 and docker3
  for i in 2 3
  do
    echo "Loading docker/ucp-agent:${UCP_VERSION} on docker ${i}..."
    docker -H unix:///data/dind/docker1/docker.sock save docker/ucp-agent:"${UCP_VERSION}" | docker -H unix:///data/dind/docker${i}/docker.sock load
    echo -e "done.\n"
  done

  echo "Installing UCP on docker1 using controller port 4443..."
  docker -H unix://"${DIND_DIR}"/docker1/docker.sock run -it --rm --name ucp -v /var/run/docker.sock:/var/run/docker.sock docker/ucp:"${UCP_VERSION}" install --admin-username admin --admin-password docker123 --host-address "${DOCKER1_IP}" --controller-port 4443 --san "${DOCKER1_IP}" --san "$(ip route get 1 | awk '{print $NF;exit}')" --san "$(hostname)" --san "$(hostname --fqdn)" --license "$(cat /media/sf_mbentley/Downloads/docker_subscription.lic)"
  echo -e "done.\n"
}

install_dtr() {
  echo "Loading DTR images on docker2..."
  docker -H unix://"${DIND_DIR}"/docker2/docker.sock load -i /data/dtr-"${DTR_VERSION}".tar.gz
  echo -e "done.\n"

  echo "Installing DTR on docker2 using DTR replica ports 80 and 443..."
  docker -H unix://"${DIND_DIR}"/docker2/docker.sock run -it --rm docker/dtr:"${DTR_VERSION}" install --ucp-url https://"${HOST_IP}:4443" --ucp-username admin --ucp-password docker123 --ucp-node docker2 --ucp-ca "$(curl -ks https://"${HOST_IP}":4443/ca)" --dtr-external-url "${HOST_IP}"
  echo -e "done.\n"
}

destroy_swarm() {
  sudo bash -c 'echo -n'
  echo "Removing docker engines (docker1, docker2, docker3)..."
  docker -H unix:///var/run/docker.sock kill docker1 docker2 docker3 || true
  docker -H unix:///var/run/docker.sock rm docker1 docker2 docker3 || true
  echo -e "done.\n"

  echo "Removing persistent data for docker engines (docker1, docker2, docker3)..."
  docker -H unix:///var/run/docker.sock volume rm docker1 docker2 docker3 || true
  sudo rm -rf "${DIND_DIR}"/docker*/* || true
  echo -e "done.\n"

  echo "Removing 'dind' network..."
  docker -H unix:///var/run/docker.sock network rm dind || true
  echo -e "done.\n"
}

check_subnet() {
  for i in $(docker -H unix:///var/run/docker.sock network ls -q)
  do
    if [ "$(docker -H unix:///var/run/docker.sock network inspect --format '{{range .IPAM.Config}}{{.Subnet}}{{end}}' "${i}")" = "${DIND_SUBNET}" ]
    then
      echo "ERROR: the subnet specified (${DIND_SUBNET}) for the 'dind' network conflicts with the existing network '$(docker -H unix:///var/run/docker.sock network inspect --format '{{.Name}}' "${i}")'"
      echo "Use DIND_SUBNET to specify a different subnet when launching a new environment"
      exit 1
    fi
  done

  echo "Subnet (${DIND_SUBNET}) is available."
}

main() {
  case ${1} in
    create_all|create_swarm|recycle_engines|install_ucp|install_dtr|destroy_swarm)
      ${1}
      ;;
    connect_engine)
      if [ -z "${2}" ]
      then
        echo "Error: Missing engine name"
        echo "Usage: $0 connect_engine docker1"
      else
        ${1} "${2}"
      fi
      ;;
    *)
      echo "Usage: $0 {create_all|create_swarm|connect_engine|install_ucp|install_dtr|recycle_engines|destroy_swarm}"
      ;;
  esac
}

main "${@}"
